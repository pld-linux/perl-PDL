diff -ur PDL-2.4.11/Graphics/PLplot/plplot.pd PDL-2.4.11-format/Graphics/PLplot/plplot.pd
--- PDL-2.4.11/Graphics/PLplot/plplot.pd	2012-01-03 00:56:28.000000000 +0100
+++ PDL-2.4.11-format/Graphics/PLplot/plplot.pd	2013-06-11 12:22:34.297791003 +0200
@@ -3544,7 +3544,7 @@
 #define check_sub_pointer(subptr, errmsg) \
   if (SvTRUE (subptr) \
       && (! SvROK (subptr) || SvTYPE (SvRV (subptr)) != SVt_PVCV)) \
-    croak (errmsg);
+    croak ("%s", errmsg);
 
 static SV* pltr_subroutine;
 
diff -ur PDL-2.4.11/IO/GD/GD.pd PDL-2.4.11-format/IO/GD/GD.pd
--- PDL-2.4.11/IO/GD/GD.pd	2012-02-10 04:05:44.000000000 +0100
+++ PDL-2.4.11-format/IO/GD/GD.pd	2013-06-11 12:22:12.644236663 +0200
@@ -107,7 +107,7 @@
 {
     sprintf(str, "Wrong LUT dimensions (%d, %d)! (should be (3, X), where X <= 256)\n",
             $SIZE(i), $SIZE(j) );
-    croak(str);
+    croak("%s",str);
 }
 
 xsize = $SIZE(x);
@@ -122,7 +122,7 @@
     if (tmp != ind)
     {
         sprintf(str, "palette mismatch on index %d (mapped to %d)!\n", ind, tmp);
-        croak(str);
+        croak("%s",str);
     }
 }
 
@@ -165,14 +165,14 @@
 {
     sprintf(str, "Invalid compression level %d, should be [-1,9]!\n", 
         $COMP(level) );
-    croak(str);
+    croak("%s",str);
 }
 
 if ($SIZE(i) != 3 || $SIZE(j) > 256)
 {
     sprintf(str, "Wrong LUT dimensions (%d, %d)! (should be (3, X), where X <= 256)\n",
             $SIZE(i), $SIZE(j) );
-    croak(str);
+    croak("%s",str);
 }
 
 xsize = $SIZE(x);
@@ -187,7 +187,7 @@
     if (tmp != ind)
     {
         sprintf(str, "palette mismatch on index %d (mapped to %d)!\n", ind, tmp);
-        croak(str);
+        croak("%s",str);
     }
 }
 
@@ -231,7 +231,7 @@
 {
     sprintf(str, "Wrong dimensions (%d, %d, %d)! (should be (X,Y,3))\n",
             $SIZE(x), $SIZE(y), $SIZE(z) );
-    croak(str);
+    croak("%s",str);
 }
 
 xsize = $SIZE(x);
@@ -278,14 +278,14 @@
 {
     sprintf(str, "Invalid compression level %d, should be [-1,9]!\n", 
         $COMP(level) );
-    croak(str);
+    croak("%s",str);
 }
 
 if ($SIZE(z) != 3)
 {
     sprintf(str, "Wrong dimensions (%d, %d, %d)! (should be (X,Y,3))\n",
             $SIZE(x), $SIZE(y), $SIZE(z) );
-    croak(str);
+    croak("%s",str);
 }
 
 xsize = $SIZE(x);
@@ -490,14 +490,14 @@
 if ( in == NULL )
 {
     sprintf(str, "%sError opening %s!\n", func, $COMP(filename));
-    croak(str);
+    croak("%s",str);
 }
 
 im = gdImageCreateFromPng(in);
 if ( im == NULL )
 {
     sprintf(str, "%sError reading PNG data!\n", func);
-    croak(str);
+    croak("%s",str);
 }
 fclose(in);
 
@@ -509,7 +509,7 @@
 {
     sprintf(str, "%sDims of %s (%dx%d) and piddle (%dx%d) do not match!\n",
             func, $COMP(filename), xsize, ysize, $SIZE(x), $SIZE(y));
-    croak(str);
+    croak("%s",str);
 }
 
 /* read the data */
@@ -542,14 +542,14 @@
 if ( in == NULL )
 {
     sprintf(str, "%sError opening %s!\n", func, $COMP(filename));
-    croak(str);
+    croak("%s",str);
 }
 
 im = gdImageCreateFromPng(in);
 if ( im == NULL )
 {
     sprintf(str, "%sError reading PNG data!\n", func);
-    croak(str);
+    croak("%s",str);
 }
 fclose(in);
 
@@ -561,7 +561,7 @@
 {
     sprintf(str, "%sDims of %s (%dx%d) and piddle (%dx%d) do not match!\n",
             func, $COMP(filename), xsize, ysize, $SIZE(x), $SIZE(y));
-    croak(str);
+    croak("%s",str);
 }
 
 /* read the data */
@@ -594,7 +594,7 @@
 {
     sprintf(str, "%sDims of gdImage (%dx%d) and piddle (%dx%d) do not match!\n",
             func, xsize, ysize, $SIZE(x), $SIZE(y));
-    croak(str);
+    croak("%s",str);
 }
 
 /* read the data */
@@ -628,7 +628,7 @@
 {
     sprintf(str, "%sDims of gdImage (%dx%d) and piddle (%dx%d) do not match!\n",
             func, xsize, ysize, $SIZE(x), $SIZE(y));
-    croak(str);
+    croak("%s",str);
 }
 
 /* read the data */
@@ -653,7 +653,7 @@
 {
     sprintf(str, "Wrong dimensions (%d, %d, %d)! (should be (X,Y,3))\n",
             $SIZE(x), $SIZE(y), $SIZE(z) );
-    croak(str);
+    croak("%s",str);
 }
 
 xsize = $SIZE(x);
@@ -690,7 +690,7 @@
 {
     sprintf(str, "Wrong LUT dimensions (%d, %d)! (should be (3, X), where X <= 256)\n",
             $SIZE(i), $SIZE(j) );
-    croak(str);
+    croak("%s",str);
 }
 
 xsize = $SIZE(x);
@@ -705,7 +705,7 @@
     if (tmp != ind)
     {
         sprintf(str, "palette mismatch on index %d (mapped to %d)!\n", ind, tmp);
-        croak(str);
+        croak("%s",str);
     }
 }
 
@@ -756,21 +756,21 @@
 if ( $SIZE(c) != 3 )
 {
     sprintf(str, "%sLUT dims should be 3,256!\n", func);
-    croak(str);
+    croak("%s",str);
 }
 
 in = fopen($COMP(filename), "rb");
 if ( in == NULL )
 {
     sprintf(str, "%sError opening %s!\n", func, $COMP(filename));
-    croak(str);
+    croak("%s",str);
 }
 
 im = gdImageCreateFromPng(in);
 if ( im == NULL )
 {
     sprintf(str, "%sError reading PNG data!\n", func);
-    croak(str);
+    croak("%s",str);
 }
 fclose(in);
 
